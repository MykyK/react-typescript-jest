[{"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\index.tsx":"1","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\reportWebVitals.ts":"2","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\App.tsx":"3","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\pages\\Dashboard.tsx":"4","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\pages\\EditPage.tsx":"5","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\components\\navbar\\index.tsx":"6","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\components\\userList\\index.tsx":"7","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\components\\editForm\\index.tsx":"8","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\components\\editMenu\\index.tsx":"9","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\store.ts":"10","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\reducers\\index.ts":"11","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\components\\navBar\\index.tsx":"12","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\actions\\index.ts":"13","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\constants.ts":"14","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\sagas.ts":"15","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\utils\\index.ts":"16"},{"size":430,"mtime":1610555311900,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1610110965126,"results":"19","hashOfConfig":"18"},{"size":638,"mtime":1610555328860,"results":"20","hashOfConfig":"18"},{"size":195,"mtime":1610908718634,"results":"21","hashOfConfig":"18"},{"size":563,"mtime":1610637027309,"results":"22","hashOfConfig":"18"},{"size":1278,"mtime":1610120276473,"results":"23","hashOfConfig":"24"},{"size":1885,"mtime":1610638822476,"results":"25","hashOfConfig":"18"},{"size":4011,"mtime":1610638590861,"results":"26","hashOfConfig":"18"},{"size":1210,"mtime":1610895834266,"results":"27","hashOfConfig":"18"},{"size":333,"mtime":1610724000944,"results":"28","hashOfConfig":"18"},{"size":891,"mtime":1610909881507,"results":"29","hashOfConfig":"18"},{"size":929,"mtime":1610282331316,"results":"30","hashOfConfig":"18"},{"size":829,"mtime":1610562503477,"results":"31","hashOfConfig":"18"},{"size":255,"mtime":1610562524499,"results":"32","hashOfConfig":"18"},{"size":716,"mtime":1610729731317,"results":"33","hashOfConfig":"18"},{"size":170,"mtime":1610620785273,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"c4z2k3",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"fzhj7c",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\index.tsx",[],["71","72"],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\reportWebVitals.ts",[],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\App.tsx",[],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\pages\\Dashboard.tsx",[],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\pages\\EditPage.tsx",[],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\components\\navbar\\index.tsx",[],["73","74"],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\components\\userList\\index.tsx",[],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\components\\editForm\\index.tsx",["75"],"import React, { Dispatch, useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { IUser } from '../../interfaces';\r\nimport { Button } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { emailValidator } from '../../utils';\r\nimport { actionEditUser } from '../../actions/index'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\n\r\ninterface PropsType {\r\n  user: IUser,\r\n}\r\n\r\nconst EditForm = (props: PropsType) => {\r\n  const { user } = props\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const [userData, setUserData] = useState(user)\r\n  const [open, setOpen] = useState(false)\r\n  const [validation, setValidation] = useState('')\r\n  const [firstName, setFirstName] = useState(user.name.split(' ')[0])\r\n  const [lastName, setLastName] = useState(user.name.split(' ')[1])\r\n  const [email, setEmail] = useState(user.email)\r\n  const [age, setAge] = useState(user.age)\r\n\r\n  useEffect(() => {\r\n    setUserData(prev => prev = { ...prev, name: `${firstName} ${prev.name.split(' ')[1]}` })\r\n  }, [firstName])\r\n\r\n\r\n  useEffect(() => {\r\n    setUserData(prev => prev = { ...prev, name: `${prev.name.split(' ')[0]} ${lastName}` })\r\n  }, [lastName])\r\n\r\n\r\n  useEffect(() => {\r\n    if (!!emailValidator(email)) {\r\n      setValidation(emailValidator(email))\r\n      setUserData(prev => prev = { ...prev, age: age })\r\n    } else {\r\n      setUserData(prev => prev = { ...prev, age: age, email: email })\r\n      setValidation(emailValidator(email))\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [email, age])\r\n\r\n\r\n\r\n  const fieldValidator = (): boolean => {\r\n    return userData.name.length > 1 && !validation.length && userData.age ? false : true\r\n  }\r\n\r\n\r\n  const handleClick = (data: IUser): void => {\r\n    dispatch(actionEditUser(data))\r\n    setOpen(true)\r\n    setTimeout(() => {\r\n      setOpen(false)\r\n      history.push('/')\r\n    }, 600)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.root} autoComplete=\"off\">\r\n        <div className=\"text-field-wrapper\">\r\n          <TextField\r\n            value={firstName}\r\n            label=\"First Name\"\r\n            onChange={e => setFirstName(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Last Name\"\r\n            onChange={e => setLastName(e.target.value)}\r\n            value={lastName}\r\n          />\r\n          <TextField\r\n            label=\"Email\"\r\n            error={!!validation}\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            helperText={validation}\r\n          />\r\n          <TextField\r\n            label=\"Age\"\r\n            type=\"number\"\r\n            value={age}\r\n            InputProps={{ inputProps: { min: 0 } }}\r\n            onChange={e => setAge(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <div className=\"button_wrapper\">\r\n            <Button\r\n              disabled={fieldValidator()}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleClick(userData)}\r\n            >\r\n              Submit\r\n          </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => history.push('/')}\r\n            >\r\n              Back\r\n          </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <Snackbar open={open} autoHideDuration={6000}>\r\n        <Alert severity=\"success\">\r\n          This is a success message!\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default EditForm;\r\n","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\components\\editMenu\\index.tsx",["76"],"import React, { useState } from 'react';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { IconButton } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n\ninterface PropsType {\n  id: string | number,\n}\n\n\nconst EditMenu = (props: PropsType) => {\n  const { id } = props\n  const history = useHistory()\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const handleRoute = (): void => {\n    history.push(`user/${id}`)\n  }\n\n  return (\n    <div className='edit-menu'>\n      <IconButton className=\"edit-btn\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><EditIcon /></IconButton >\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleRoute}>Edit</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n\nexport default EditMenu;\n","E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\store.ts",[],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\reducers\\index.ts",[],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\components\\navBar\\index.tsx",[],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\actions\\index.ts",[],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\constants.ts",[],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\sagas.ts",[],"E:\\Mykyta\\workFlowDirectory\\FrontEndProjects\\react-typescript\\test-project\\src\\utils\\index.ts",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"87","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],["88"],["89"],"@typescript-eslint/no-unused-vars","'Dispatch' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]